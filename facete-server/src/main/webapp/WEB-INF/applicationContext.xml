<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<context:component-scan base-package="org.aksw.facete.web.controller" />

<!-- 	<bean id="facete-html-includes" class="org.aksw.facete.web.utils.MinifyHelperPomImpl" -->
<!-- 		factory-method="create"> -->
<!-- 	</bean> -->


	<bean id="facete.themeConfigurator" class="org.aksw.facete.web.utils.FaceteConfigurator">
	</bean>

	<bean id="facete.themeConfig"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject"><ref local="facete.themeConfigurator" /></property>
		<property name="targetMethod"><value>createThemeConfig</value></property>
		<!-- <property name="arguments"> -->
		<!-- <list> -->
		<!-- <value>java.version</value> -->
		<!-- </list> -->
		<!-- </property> -->
	</bean>


<!-- 	<bean id="facete.dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> -->
<!-- 	    <property name="jndiName"><value>jdbc/facete</value></property> -->
<!-- 	    <property name="resourceRef"><value>true</value></property> -->
<!-- 	</bean> -->


	<!-- <task:annotation-driven /> -->



	<!-- :::: Packages for which to process Spring annotations -->
	<!-- <context:component-scan base-package="org.aksw.facete.web"/> -->


	<!-- :::: Enable Spring property substitution from external .properties 
		file -->
	<!-- <bean id="propertyConfigurer" -->
	<!-- class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> -->
	<!-- <property name="location" value="file:#{contextParameters.configDirectory 
		+ servletContext.contextPath}/platform.properties" /> -->
	<!-- <property name="location" value="file:#{systemProperties['configDirectory'] 
		+ servletContext.contextPath}/platform.properties" /> -->
	<!-- </bean> -->



	<!-- :::: Sparqilfy config parsing -->
	<!-- <bean id="sparqlifyConfigFactory" class="org.aksw.sparqlify.config.loader.ConfigFactory"> -->
	<!-- <property name="configFile" value="file:#{systemProperties['configDirectory'] 
		+ servletContext.contextPath}/views.sparqlify" /> -->
	<!-- </bean> -->

	<!-- <bean id="sparqlifyConfig" factory-bean="sparqlifyConfigFactory" factory-method="create" 
		></bean> -->

	<!-- class="org.aksw.commons.sparql.api.core.QueryExecutionFactory" destroy-method="close"> -->

	<!-- <bean id="pubbyConfigFactory" -->
	<!-- class="org.aksw.sparqlify.platform.config.PubbyConfigFactory"> -->
	<!-- <property name="baseUri" value="${platform.linkedData.baseUri}" /> -->



	<!-- :::: Servlet context injection :::: Needed for Pubby -->
	<!-- <bean id="servletContextBeanInjector" class="org.aksw.sparqlify.platform.config.ServletContextBeanInjector"/> -->

	<!-- :::: Pubby configuration -->
	<!-- <bean id="pubbyConfigFactory" -->
	<!-- class="org.aksw.sparqlify.platform.config.PubbyConfigFactory"> -->
	<!-- <property name="baseUri" value="${platform.linkedData.baseUri}" /> -->
	<!-- <property name="contextPath" value="${platform.linkedData.contextPath}" 
		/> -->
	<!-- <property name="sparqlifyConfig"><ref bean="sparqlifyConfig" /></property> -->
	<!-- <property name="queryExecutionFactory"><ref bean="sparqlifyQef" /></property> -->
	<!-- <property name="baseConfigFile" value="file:#{systemProperties['configDirectory'] 
		+ servletContext.contextPath}/pubby.ttl" /> -->
	<!-- <property name="projectName" value="${platform.projectName}" /> -->
	<!-- <property name="projectHomepage" value="${platform.projectHomepage}" 
		/> -->
	<!-- </bean> -->

	<!-- <bean id="pubbyConfig" factory-bean="pubbyConfigFactory" factory-method="create" 
		/> -->


</beans>
