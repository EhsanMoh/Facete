/**
 * This file contains basic configuration for the spatial semantic browser SemMap.
 * 
 *
 * TODO: We need to be able to deal with mulitiple configs at once; even multiple configs per graph!
 */
(function() {

	var sparql = Namespace("org.aksw.ssb.sparql.syntax");
	var facets = Namespace("org.aksw.ssb.facets");
	var config = Namespace("org.aksw.ssb.config");
	

	/*
	 * Sparql Endpoint Configuration
	 * 
	 * sparqlServiceUri:      The target SPARQL endpoint
	 * sparqlProxyServiceUri: Optional. If given, requests to the
	 *                        target endpoint are made via the proxy.
	 * sparqlProxyParamName:  The query string parameter name to be used
	 *                        in proxy requests
	 */
	config.sparqlServiceIri = 'http://fp7-pp.publicdata.eu/sparql';	
	config.sparqlDefaultGraphIris = ['http://fp7-pp.publicdata.eu/'];


    // First proxy Iri is for the PHP proxy, second for the Tomcat version	
	config.sparqlProxyServiceIri = "resources/lib/SparqlProxyPHP/current/sparql-proxy.php";
	config.sparqlProxyServiceIri = 'api/sparql-proxy';

	config.sparqlProxyParamName = "service-uri";	

	config.preferredLanguages = ['de', 'en', ''];

	config.conceptPathFinderApiUrl = "api/path-finding";

	
	/*
	 * IGNORE EVERYTHING BELOW FOR NOW 
	 * ITS FROM THE PRIOR VERSION OF SEMMAP AND HAS NOT YET BEEN INTEGRATED
	 */
	
	
	/*
	 * Quad Tree Configuration
	 * 
	 * maxTileItemCount:   Maximum allowed number of items per tile.
	 * maxGlobalItemCount: If there is globally less-equal this number of items,
	 *                     do not use tiles.
	 */
	config.quadTree = {
			maxTileItemCount: 50,
			maxGlobalItemCount: 200
	};


	/*
	 * Configurations of the icons shown on the map
	 * 
	 * Will fallback to gif versions of the images if svg is not supported. 
	 */
	var isSvgSupported = supportsSvg(); 
	var suffix = isSvgSupported ? "svg" : "gif";
	
	config.markerUrlDefault = "img/org/openclipart/people/mightyman/map-marker-blue." + suffix;
	config.markerUrlSelected = "img/org/openclipart/people/mightyman/map-marker-orange." + suffix;

	
	/*
	 * 
	 * typeStr:    The URI of the class whose instances are of interest
	 * geoPathStr: The path from the instances to the geographic resources
	 * 
	 */
	//var typeStr = "http://fp7-pp.publicdata.eu/ontology/Project";
	var geoPathStr = "";


	
	/*
	 * Configuration of some parameters based on typeStr and geoPathStr.
	 *  
	 */
//	var s = sparql.Node.v("s");
//	var a = sparql.Node.uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#type");
//	var type = sparql.Node.uri(typeStr);
//	var driverElement = new sparql.ElementTriplesBlock([new sparql.Triple(s, a, type)]);
	var driverElement = null;
	
	var driver = null; //new facets.ConceptInt(driverElement, s);
	var pathManager = new facets.PathManager("s");

	
	config.driver = driver; 
	config.navigationPath = null;
	config.geoPath = facets.Path.fromString(geoPathStr);
	config.pathManager = pathManager;


	/*
	 * Experimental features 
	 */
	config.isWriteEnabled = true;
})();
